checkForCookie:
  switch:
    - condition: ${incoming.headers.cookie == null || incoming.headers.cookie == ""}
      next: returnUnauthorized
  next: extractRequestData

extractRequestData:
  assign:
    cookie: ${incoming.headers.cookie}
  next: checkIfAuthorized

checkIfAuthorized:
  template: templates/check-user-authority
  requestType: post
  headers:
    cookie: ${cookie}
  result: authorityResult
  next: checkAuthorityResult

checkAuthorityResult:
  switch:
    - condition: ${authorityResult !== "false"}
      next: assign_values
  next: returnUnauthorized

assign_values:
  assign:
    params: ${incoming.body}
  next: getResponsesWithNameAndText

getResponsesWithNameAndText:
  call: http.post
  args:
    url: "[#TRAINING_OPENSEARCH]:[#TRAINING_OPENSEARCH_PORT]/responses/_search/template"
    body:
      id: "response-with-name-and-text"
      params: ${params}
  result: getResponsesResult

validateResponse:
  switch:
    - condition: ${getResponsesResult.response.body.hits.hits.length > 0}
      next: ruleResponses
  next: returnResponseIsMissing

ruleResponses:
  call: http.post
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]:[#TRAINING_PUBLIC_RUUTER_PORT]/rasa/rules/search"
    headers:
      cookie: ${cookie}
    body:
      response: ${params.response_name}
      type: "responses"
  result: ruleResponses

storiesResponses:
  call: http.post
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]:[#TRAINING_PUBLIC_RUUTER_PORT]/rasa/stories/search"
    headers:
      cookie: ${cookie}
    body:
      response: ${params.response_name}
      type: "responses"
  result: storiesResponses

mapResponsesData:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]:[#TRAINING_DMAPPER_PORT]/dmapper/get-response-dependencies"
    body:
      response: ${getResponsesResult.response.body.hits.hits}
      stories: ${storiesResponses.response.body.response.stories}
      rules: ${ruleResponses.response.body.response.rules}
  result: responsesData
  next: returnSuccess

returnSuccess:
  return: ${responsesData.response.body}
  next: end

returnResponseIsMissing:
  return: "Can't find response"
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end
