checkForCookie:
  switch:
    - condition: ${incoming.headers.cookie == null || incoming.headers.cookie == ""}
      next: returnUnauthorized
  next: extractRequestData

extractRequestData:
  assign:
    cookie: ${incoming.headers.cookie}
  next: checkIfAuthorized

checkIfAuthorized:
  template: templates/check-user-authority
  requestType: post
  headers:
    cookie: ${cookie}
  result: authorityResult
  next: checkAuthorityResult

checkAuthorityResult:
  switch:
    - condition: ${authorityResult !== "false"}
      next: assign_values
  next: returnUnauthorized

assign_values:
  assign:
    parameters: ${incoming.body}
  next: runCommand

runCommand:
  call: http.post
  args:
    #TODO: Implement the command execution logic
    url: "[#TRAINING_DMAPPER]:[#TRAINING_DMAPPER_PORT]/dmapper/execute-command"
    body:
      command: ${parameters.command}
  result: commandResponse

validateCommand:
  switch:
    - condition: ${commandResponse.response.body}
      next: returnSuccess
  next: returnFailed

returnSuccess:
  return: "Successfully executed command"
  next: end

returnFailed:
  return: "Failed executing command"
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end
